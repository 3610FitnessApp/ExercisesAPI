// <auto-generated />
using Exercises.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Exercises.Api.Migrations
{
    [DbContext(typeof(ExerciseContext))]
    partial class ExerciseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Exercises.Api.Data.BodyPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ExerciseId");

                    b.Property<int?>("WorkoutId");

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("BodyParts");
                });

            modelBuilder.Entity("Exercises.Api.Data.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("WorkoutId");

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("Exercises.Api.Data.ExerciseInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("WorkoutInstanceId");

                    b.Property<int>("exerciseId");

                    b.Property<int>("reps");

                    b.Property<int>("sets");

                    b.Property<int>("weight");

                    b.Property<int>("workoutId");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutInstanceId");

                    b.ToTable("ExerciseInstances");
                });

            modelBuilder.Entity("Exercises.Api.Data.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("daysPerWeek");

                    b.Property<string>("programName");

                    b.Property<int>("week");

                    b.HasKey("Id");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("Exercises.Api.Data.ProgramInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("programId");

                    b.Property<int>("userId");

                    b.HasKey("Id");

                    b.ToTable("ProgramInstances");
                });

            modelBuilder.Entity("Exercises.Api.Data.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("email");

                    b.Property<string>("firstName");

                    b.Property<int>("height");

                    b.Property<string>("lastName");

                    b.Property<string>("password");

                    b.Property<int>("skillLevel");

                    b.Property<string>("username");

                    b.Property<int>("weight");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Exercises.Api.Data.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ProgramId");

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("Exercises.Api.Data.WorkoutInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ProgramInstanceId");

                    b.Property<DateTime>("date");

                    b.Property<int>("userId");

                    b.Property<int>("workoutId");

                    b.HasKey("Id");

                    b.HasIndex("ProgramInstanceId");

                    b.ToTable("WorkoutInstances");
                });

            modelBuilder.Entity("Exercises.Api.Data.BodyPart", b =>
                {
                    b.HasOne("Exercises.Api.Data.Exercise")
                        .WithMany("bodyParts")
                        .HasForeignKey("ExerciseId");

                    b.HasOne("Exercises.Api.Data.Workout")
                        .WithMany("bodyParts")
                        .HasForeignKey("WorkoutId");
                });

            modelBuilder.Entity("Exercises.Api.Data.Exercise", b =>
                {
                    b.HasOne("Exercises.Api.Data.Workout")
                        .WithMany("exercises")
                        .HasForeignKey("WorkoutId");
                });

            modelBuilder.Entity("Exercises.Api.Data.ExerciseInstance", b =>
                {
                    b.HasOne("Exercises.Api.Data.WorkoutInstance")
                        .WithMany("exercises")
                        .HasForeignKey("WorkoutInstanceId");
                });

            modelBuilder.Entity("Exercises.Api.Data.Workout", b =>
                {
                    b.HasOne("Exercises.Api.Data.Program")
                        .WithMany("workouts")
                        .HasForeignKey("ProgramId");
                });

            modelBuilder.Entity("Exercises.Api.Data.WorkoutInstance", b =>
                {
                    b.HasOne("Exercises.Api.Data.ProgramInstance")
                        .WithMany("workouts")
                        .HasForeignKey("ProgramInstanceId");
                });
#pragma warning restore 612, 618
        }
    }
}
